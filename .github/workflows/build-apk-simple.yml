name: Build APK (Simple)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip openjdk-8-jdk
        sudo apt install -y python3-pip autotools-dev autoconf automake libtool pkg-config
        sudo apt install -y libtool-bin libltdl-dev cmake gettext
        python -m pip install --upgrade pip==21.3.1
        pip install Cython==0.29.33
        pip install kivy==2.1.0
        pip install buildozer==1.4.0

    - name: Setup licenses
      run: |
        mkdir -p $HOME/.android/licenses
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $HOME/.android/licenses/android-sdk-license

    - name: Create minimal app
      run: |
        cat > main.py << EOF
        from kivy.app import App
        from kivy.uix.label import Label
        class SnakeApp(App):
            def build(self):
                return Label(text='Snake Game APK Test')
        SnakeApp().run()
        EOF
        
        cat > buildozer.spec << EOF
        [app]
        title = Snake Game
        package.name = snakegame
        package.domain = org.example
        source.dir = .
        version = 1.0
        requirements = python3,kivy,android,pyjnius
        orientation = portrait
        [buildozer]
        log_level = 2
        [android]
        api = 30
        ndk = 23b
        android.arch = armeabi-v7a
        android.enable_androidx = True
        android.permissions = INTERNET
        android.meta_data = com.google.android.gms.ads.APPLICATION_ID=ca-app-pub-8134227271086623~8232284552
        EOF

    - name: Build APK
      run: |
        export JAVA_HOME=/opt/hostedtoolcache/AdoptOpenJDK/8.0.312-7/x64
        buildozer android debug --verbose

    - name: Upload APK
      run: |
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        mkdir -p output
        cp "$APK_FILE" output/snake-game.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: snake-game-apk-simple
        path: output/snake-game.apkname: Build APK (Simple)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip openjdk-8-jdk
        sudo apt install -y python3-pip autotools-dev autoconf automake libtool pkg-config
        sudo apt install -y libtool-bin libltdl-dev cmake gettext
        python -m pip install --upgrade pip==21.3.1
        pip install Cython==0.29.33
        pip install kivy==2.1.0
        pip install buildozer==1.4.0

    - name: Setup licenses
      run: |
        mkdir -p $HOME/.android/licenses
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $HOME/.android/licenses/android-sdk-license

    - name: Create minimal app
      run: |
        cat > main.py << EOF
        from kivy.app import App
        from kivy.uix.label import Label
        class SnakeApp(App):
            def build(self):
                return Label(text='Snake Game APK Test')
        SnakeApp().run()
        EOF
        
        cat > buildozer.spec << EOF
        [app]
        title = Snake Game
        package.name = snakegame
        package.domain = org.example
        source.dir = .
        version = 1.0
        requirements = python3,kivy,android,pyjnius
        orientation = portrait
        [buildozer]
        log_level = 2
        [android]
        api = 30
        ndk = 23b
        android.arch = armeabi-v7a
        android.enable_androidx = True
        android.permissions = INTERNET
        android.meta_data = com.google.android.gms.ads.APPLICATION_ID=ca-app-pub-8134227271086623~8232284552
        EOF

    - name: Build APK
      run: |
        export JAVA_HOME=/opt/hostedtoolcache/AdoptOpenJDK/8.0.312-7/x64
        buildozer android debug --verbose

    - name: Upload APK
      run: |
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        mkdir -p output
        cp "$APK_FILE" output/snake-game.apk

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: snake-game-apk-simple
        path: output/snake-game.apk
